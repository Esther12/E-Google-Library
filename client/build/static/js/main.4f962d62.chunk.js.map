{"version":3,"sources":["components/Header/index.js","components/Nav/index.js","components/Wapper/index.js","components/Footer/index.js","utils/API.js","components/SearchForm/index.js","components/Card/index.js","pages/BookSearch.js","pages/CheckSaved.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","className","Navbar","to","window","location","pathname","Wrapper","Footer","getBook","Query","axios","get","saveBook","post","checkSaved","SearchForm","type","onChange","handleInputChange","placeholder","aria-label","aria-describedby","onClick","handleFormSubmit","id","handleFormSave","Card","src","image","alt","title","authors","description","href","link","value","index","Search","state","search","books","results","error","event","setState","target","preventDefault","API","trim","then","res","data","status","Error","message","console","log","items","volumeInfo","bookDetial","i","length","push","toString","imageLinks","smallThumbnail","infoLink","catch","err","displayCards","map","item","style","minHeight","this","Component","CheckSaved","App","Header","Nav","exact","path","component","BookSearch","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4f962d62.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n  return (\n    <div className=\"image-bg bg-dark\">\n        <div className=\"heads-bg d-flex align-items-center\">\n            <div className=\"mx-auto stickyDiv\">\n                    <h1 className=\"text-center\">Search...</h1>\n            </div>\n            \n        </div>\n    </div>\n\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\n\n// Depending on the current path, this component sets the \"active\" class on the appropriate navigation link item\nfunction Navbar() {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n      <Link className=\"navbar-brand\" to=\"/\">\n        Google Book Search Engine\n      </Link>\n      <div>\n        <ul className=\"navbar-nav\">\n          <li className=\"nav-item\">\n            <Link\n              to=\"/\"\n              className={\n                window.location.pathname === \"/\" || window.location.pathname === \"/\"\n                  ? \"nav-link active\"\n                  : \"nav-link\"\n              }\n            >\n              Search ...\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link\n              to=\"/checksaved\"\n              className={window.location.pathname === \"/checksaved\" ? \"nav-link active\" : \"nav-link\"}\n            >\n              Saved Book\n            </Link>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <main className=\"wrapper\" {...props} />;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Footer() {\n  return (\n    <footer className=\"mt-5 text-center footer \">\n      <span>Google Book Search Engine @2019 by Esther Yating Su</span>\n    </footer>\n  );\n}\n\nexport default Footer;","import axios from \"axios\";\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nexport default {\n  getBook: function(Query) {\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\"+ Query+\"&key=AIzaSyD704Ec8vHv-OJJHKhaHFj8Pfe_fin7orw\");\n  },\n  saveBook: function(Query) {\n    return axios.post(\"/api/books\", Query);\n  },\n  checkSaved: function() {\n    return axios.get(\"/api/books\");\n  }\n};\n","import React from \"react\";\n\nfunction SearchForm (props){\n    return(\n        <div className=\"input-group mb-3\">\n            <input type=\"text\" onChange={props.handleInputChange} className=\"form-control\" placeholder=\"Book Name or Author Name \" aria-label=\"Recipient's username\" aria-describedby=\"button-addon2\"/>\n            <div className=\"input-group-append\">\n                <button className=\"btn btn-outline-secondary\" onClick={props.handleFormSubmit} type=\"button\" id=\"button-addon2\">Search</button>\n                <button className=\"btn btn-outline-secondary\" onClick={props.handleFormSave} type=\"button\" id=\"button-addon2\">Save</button>\n            </div>\n        </div>\n    )\n}\n\nexport default SearchForm;","import React from 'react';\n\nfunction Card (props){\n\n    function saveBook() {\n        props.value(props.index);\n    }\n    return (\n        <div className=\"col12 card mb-3\">\n            <div className=\"row no-gutters\">\n            <div className=\"col-4\">\n                <img src={props.image} className=\"card-img\" alt={props.title}/>\n            </div>\n            <div className=\"col-8\">\n                <div className=\"card-body\">\n                <h5 className=\"card-title\">{props.authors}</h5>\n                <p className=\"card-text\">{props.description}</p>\n                <a href={props.link} className=\"btn btn-primary\">Check The Book</a>\n                <botton href={props.link} className=\"btn btn-primary\" onClick = {saveBook}>Save This Book</botton>\n                </div>\n            </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Card;","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport SearchForm from \"../components/SearchForm\";\nimport Wrapper from \"../components/Wapper\";\nimport Card from \"../components/Card\";\n\nclass Search extends Component {\n  state = {\n    search: \"\",\n    books: \"\",\n    results: [],\n    error: \"\"\n  };\n\n  // When the component mounts, get a list of all available base breeds and update this.state.breeds\n  // componentDidMount() {\n  //   API.getBaseBreedsList()\n  //     .then(res => this.setState({ breeds: res.data.message }))\n  //     .catch(err => console.log(err));\n  // }\n\n  handleInputChange = event => {\n    this.setState({ search: event.target.value });\n  };\n \n  handleFormSubmit = event => {\n    event.preventDefault();\n    API.getBook(this.state.search.trim())\n      .then(res => {\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n        console.log(res.data.items[1].volumeInfo);\n        let bookDetial = [];\n        for(let i =0; i<res.data.items.length; i++){\n            bookDetial.push({\n              title : res.data.items[i].volumeInfo.title,\n              authors : res.data.items[i].volumeInfo.authors.toString(),\n              description : res.data.items[i].volumeInfo.description,\n              image : res.data.items[i].volumeInfo.imageLinks.smallThumbnail,\n              link : res.data.items[i].volumeInfo.infoLink\n            }\n            \n            )\n        }\n        console.log(bookDetial);\n        this.setState({ results: bookDetial });\n      })\n      .catch(err => this.setState({ error: err.message }));\n  };\n\n  handleFormSave = event =>{\n      console.log(event,this.state.results[event]);\n      API.saveBook(this.state.results[event])\n      .then(res=>{\n        if (res.data.status === \"error\") {\n          throw new Error(res.data.message);\n        }\n      })\n  }\n  displayCards = ()=>{\n    return this.state.results.map((item, index) => (\n        <Card title = {item.title} link = {item.link} description ={item.description} image = {item.image}  authors = {item.authors} value = {this.handleFormSave} index = {index}></Card>\n    )\n    );\n  }\n  render() {\n    return (\n      <div>\n        <Wrapper style={{ minHeight: \"80%\" }}>\n          <h1 className=\"text-center\">Search By Book!</h1>\n          <SearchForm\n            handleFormSubmit={this.handleFormSubmit}\n            handleInputChange={this.handleInputChange}\n            handleFormSave = {this.handleFormSave}\n          />\n         {this.displayCards()}\n        </Wrapper>\n      </div>\n    );\n  }\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport Wrapper from \"../components/Wapper\";\nimport Card from \"../components/Card\";\n\nclass CheckSaved extends Component {\n\n    state = {\n        books : []\n    }\n    getBook = () =>{\n        console.log(\"geting the book\");\n        API.checkSaved()\n        .then(res=>{\n            this.setState({ books : res.data});\n        })\n    };\n    componentDidMount() {\n        this.getBook();\n      }\n    displayCards = ()=>{\n      return this.state.books.map(item => (\n          <Card title = {item.title} link = {item.link} description ={item.description} image = {item.image}  authors = {item.authors}></Card>\n      )\n      );\n    }\n    render() {\n      return (\n        <div>\n          <Wrapper style={{ minHeight: \"80%\" }}>\n            <h1 className=\"text-center\">Saved Book!</h1>\n            {this.displayCards()}\n          </Wrapper>\n        </div>\n      );\n    }\n  }\n  \n  export default CheckSaved;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter, Route} from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wapper\";\nimport Footer from \"./components/Footer\";\nimport BookSearch from \"./pages/BookSearch\";\nimport CheckSaved from \"./pages/CheckSaved.js\";\n\nfunction App() {\n  return (\n        <BrowserRouter>\n      <div>\n        <Header/>\n        <Nav/>\n        <Wrapper>\n         <Route exact path = \"/\" component ={BookSearch} />\n          <Route exact path = \"/checksaved\" component ={CheckSaved} />\n        </Wrapper>\n        <Footer/>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}